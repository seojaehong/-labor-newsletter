# 워크플로우 이름
name: Daily Labor Newsletter

# 워크플로우 실행 트리거 설정
on:
  schedule:
    - cron: '0 22 * * *' # 매일 아침 7시 (한국시간 기준)

  workflow_dispatch:

# 작업(Job) 정의
jobs:
  run-newsletter:
    runs-on: ubuntu-latest

    # GitHub Actions 봇(GITHUB_TOKEN)에게 권한 부여
    # 자동 커밋 Action 사용 시 필요합니다.
    permissions: # <-- 이 블록 유지
      contents: write # <-- 쓰기 권한 유지

    # 작업(Job)이 수행할 단계(Steps)들
    steps:
      # 1. GitHub 리포지토리 코드 체크아웃
      - name: 체크아웃 저장소
        uses: actions/checkout@v4

      # 2. Python 환경 설정
      - name: Python 설정
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. 의존성 라이브러리 설치
      - name: 패키지 설치
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Python 스크립트 실행
      # 스크립트 실행 결과(뉴스레터 내용)가 newsletter.txt 파일로 저장됩니다.
      # 메일 발송도 이 스텝 실행 중에 발생합니다.
      - name: 뉴스레터 실행 (메일 발송 포함)
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          # 스크립트 실행. 표준 출력은 newsletter.txt로 리다이렉션됩니다.
          # 스크립트 내부의 print문은 Actions 로그에 표시됩니다.
          python main.py > newsletter.txt

      # 5. 결과물 자동 커밋 및 푸시 (외부 Action 사용)
      # 이 스텝이 이전의 수동 git 명령어 스텝 (결과물 저장소에 커밋)을 완전히 대체합니다.
      # 스텝 4에서 newsletter.txt 파일에 변경사항이 생겼음을 감지하여 자동으로 커밋하고 푸시합니다.
      - name: 결과물 자동 커밋
        # stefanzweifel/git-auto-commit-action Action 사용
        # https://github.com/stefanzweifel/git-auto-commit-action
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # 커밋할 파일 지정. 생략 시 변경된 모든 파일이 커밋 대상이 됩니다.
          # files: newsletter.txt # 특정 파일만 커밋하려면 주석 해제

          # 커밋 메시지 설정 (선택 사항)
          # 기본값: 'ci: Automated change'
          commit_message: "뉴스레터 자동 업데이트 - $(date +'%Y-%m-%d')"

          # 커밋봇 정보 설정 (선택 사항)
          # 기본값 사용 시 'github-actions[bot]'으로 표시됩니다.
          # commit_user_name: 'Your Bot Name'
          # commit_user_email: 'your-bot-email@example.com'

          # GITHUB_TOKEN 사용 설정 (필요한 권한은 이미 permissions 블록에서 부여됨)
          # 토큰을 명시적으로 지정하려면 아래 주석을 해제합니다. 보통 기본값으로 작동합니다.
          # token: ${{ secrets.GITHUB_TOKEN }}
